// Generated by CoffeeScript 1.4.0
(function() {
  var $canvas, $window, animate, animation, bottomLeft, bottomRight, cH, cW, cX, cY, canvas, context, draw, init, mouseX, mouseY, toggle, topLeft, topRight, track;

  (function() {
    var lastTime, vendor, _i, _len, _ref;
    lastTime = 0;
    _ref = ['ms', 'moz', 'webkit', 'o'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      vendor = _ref[_i];
      if (window.requestAnimationFrame) {
        break;
      }
      window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
      window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];
    }
    if (!window.requestAnimationFrame) {
      window.requestAnimationFrame = function(callback, element) {
        var currTime, id, timeToCall;
        currTime = new Date().getTime();
        timeToCall = Math.max(0, 16 - (currTime - lastTime));
        id = window.setTimeout(callback(currTime + timeToCall), timeToCall);
        lastTime = currTime + timeToCall;
        return id;
      };
    }
    if (!window.cancelAnimationFrame) {
      return window.cancelAnimationFrame = function(id) {
        return clearTimeout(id);
      };
    }
  })();

  /* --------------------------------------------
       Begin triangles.coffee
  --------------------------------------------
  */


  canvas = null;

  context = null;

  toggle = null;

  cW = null;

  cX = null;

  cH = null;

  cY = null;

  /*
  
              |
              |
      1       |      2
              |
              |
  --------[cX, cY]---------
              |
              |
      4       |      3
              |
              |
  */


  topLeft = "1";

  topRight = "2";

  bottomRight = "3";

  bottomLeft = "4";

  mouseX = 100;

  mouseY = 100;

  animation = null;

  $canvas = $("#triangles");

  $window = $(window);

  animate = function() {
    animation = window.requestAnimationFrame(animate);
    return track();
  };

  draw = function() {
    var time, x, y;
    time = new Date().getTime() * 0.002;
    x = Math.sin(time) * 192 + 256;
    y = Math.cos(time * 0.9) * 192 + 256;
    toggle = !toggle;
    if (context) {
      context.fillStyle = toggle ? 'rgb(200,200,20)' : 'rgb(20,20,200)';
      context.beginPath();
      context.arc(x, y, 10, 0, Math.PI * 2, true);
      context.closePath();
      context.fill();
    }
  };

  track = function() {
    var quadrant;
    quadrant = null;
    if (mouseX < cX) {
      if (mouseY < cY) {
        quadrant = topLeft;
      } else {
        quadrant = bottomLeft;
      }
    } else {
      if (mouseY < cY) {
        quadrant = topRight;
      } else {
        quadrant = bottomRight;
      }
    }
    console.log(quadrant);
    context.fillStyle = "rgba(255, 255, 255, 1)";
    context.fillRect(0, 0, cW, cH);
    context.fillStyle = "#000000";
    context.font = "10px sans-serif";
    context.fillText("90Â°", cX - 3, mouseY);
    context.fillText("l: " + (Math.abs(cX - mouseX)) + "px", mouseX + ((cX - mouseX) / 2), mouseY - 3);
    context.fillText("h: " + (Math.abs(cY - mouseY)) + "px", cX + 3, mouseY + ((cY - mouseY) / 2));
    context.beginPath();
    context.moveTo(cX, cY);
    context.lineTo(mouseX, mouseY);
    context.lineTo(cX, mouseY);
    context.closePath();
    context.strokeStyle = '#000000';
    return context.stroke();
  };

  init = (function() {
    canvas = $canvas[0];
    canvas.width = $canvas.width();
    canvas.height = $canvas.height();
    context = canvas.getContext('2d');
    cW = canvas.width;
    cX = cW / 2;
    cH = canvas.height;
    return cY = cH / 2;
  })();

  $canvas.on("mousedown", function() {
    animate();
    return $window.on("mousemove", function(e) {
      mouseX = e.clientX;
      return mouseY = e.clientY;
    }).on("mouseup", function() {
      window.cancelAnimationFrame(animation);
      return $window.off("mousemove");
    });
  });

}).call(this);
